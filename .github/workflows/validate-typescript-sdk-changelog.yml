name: Validate TypeScript SDK Changelog

on:
  pull_request:
    paths:
      - 'packages/sdks/typescript/package.json'

jobs:
  validate-changelog:
    name: Validate Changelog Update
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Check if package version changed
        id: version_changed
        run: |
          CURRENT_VERSION=$(node -p "require('./packages/sdks/typescript/package.json').version")
          
          # Get the previous version from the base branch
          git fetch origin ${{ github.base_ref }}
          git checkout origin/${{ github.base_ref }} -- packages/sdks/typescript/package.json 2>/dev/null || echo "No previous version found"
          PREVIOUS_VERSION=$(node -p "require('./packages/sdks/typescript/package.json').version" 2>/dev/null || echo "0.0.0")
          
          # Restore current version
          git checkout HEAD -- packages/sdks/typescript/package.json
          
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "✓ Package version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "✓ Package version unchanged ($CURRENT_VERSION)"
          fi

      - name: Check changelog updated
        if: steps.version_changed.outputs.version_changed == 'true'
        run: |
          CURRENT_VERSION="${{ steps.version_changed.outputs.current_version }}"
          CHANGELOG_FILE="packages/sdks/typescript/CHANGELOG.md"
          
          if [ ! -f "$CHANGELOG_FILE" ]; then
            echo "❌ CHANGELOG.md file not found at $CHANGELOG_FILE"
            exit 1
          fi
          
          # Check if the current version exists in the changelog
          if grep -q "## \[$CURRENT_VERSION\]" "$CHANGELOG_FILE"; then
            echo "✅ Changelog contains entry for version $CURRENT_VERSION"
            
            # Verify the changelog entry is not just a placeholder
            CHANGELOG_SECTION=$(awk -v version="$CURRENT_VERSION" '
              BEGIN { found=0; content="" }
              /^## \[/ { 
                if (found) exit
                if ($0 ~ "\\[" version "\\]") {
                  found=1
                  next
                }
              }
              found && /^## \[/ { exit }
              found && /^[[:space:]]*$/ { next }
              found { content = content $0 "\n" }
              END { print content }
            ' "$CHANGELOG_FILE")
            
            if [ -z "$CHANGELOG_SECTION" ] || [ "$CHANGELOG_SECTION" = " " ]; then
              echo "❌ Changelog entry for version $CURRENT_VERSION appears to be empty"
              echo "Please add meaningful changelog content for this version."
              exit 1
            else
              echo "✅ Changelog entry for version $CURRENT_VERSION has content"
            fi
          else
            echo "❌ Changelog does not contain entry for version $CURRENT_VERSION"
            echo ""
            echo "Please update packages/sdks/typescript/CHANGELOG.md with an entry for version $CURRENT_VERSION"
            echo ""
            echo "Expected format:"
            echo "## [$CURRENT_VERSION] - $(date +%Y-%m-%d)"
            echo ""
            echo "### Added"
            echo "- New features"
            echo ""
            echo "### Changed" 
            echo "- Changes to existing features"
            echo ""
            echo "### Fixed"
            echo "- Bug fixes"
            exit 1
          fi

      - name: Validate changelog format
        if: steps.version_changed.outputs.version_changed == 'true'
        run: |
          CHANGELOG_FILE="packages/sdks/typescript/CHANGELOG.md"
          CURRENT_VERSION="${{ steps.version_changed.outputs.current_version }}"
          
          # Check if the changelog follows Keep a Changelog format
          if ! grep -q "# Changelog" "$CHANGELOG_FILE"; then
            echo "⚠️ Warning: Changelog should start with '# Changelog' header"
          fi
          
          if ! grep -q "keepachangelog.com" "$CHANGELOG_FILE"; then
            echo "⚠️ Warning: Consider adding a reference to Keep a Changelog format"
          fi
          
          # Verify version entry has a date
          VERSION_LINE=$(grep "## \[$CURRENT_VERSION\]" "$CHANGELOG_FILE" || echo "")
          if [ -n "$VERSION_LINE" ] && ! echo "$VERSION_LINE" | grep -q "[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]"; then
            echo "⚠️ Warning: Version $CURRENT_VERSION entry should include a date in YYYY-MM-DD format"
          fi
          
          echo "✅ Changelog format validation complete"